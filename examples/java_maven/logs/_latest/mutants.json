[
    {
        "id": "1",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/1_BankAccount.java",
        "status": "KILLED",
        "error_msg": "Tests run: 14, Failures: 5, Errors: 0, Skipped: 0, Time elapsed: 0.029 s <<< FAILURE! - in BankAccountTest\n[ERROR] testApplyAnnualInterestPositiveRate  Time elapsed: 0.005 s  <<< FAILURE!",
        "type": "Alter Outputs",
        "description": "Change the return value to always return 0.0 instead of the actual balance.",
        "udiff": "--- \n+++ \n@@ -20,7 +20,7 @@\n     }\n\n \n\n     public double getBalance() {\n\n-        return balance;\n\n+        return 0.0; // Mutated to always return 0.0\n\n     }\n\n \n\n     public List<String> getTransactionHistory() {\n"
    },
    {
        "id": "2",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/2_BankAccount.java",
        "status": "KILLED",
        "error_msg": "[INFO] Scanning for projects...\n[INFO] \n[INFO] --------------------------< com.example:demo >--------------------------\n[INFO] Building demo 1.0-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ demo ---\n[INFO] Deleting /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target\n[INFO] \n[INFO] --- jacoco:0.8.7:prepare-agent (default) @ demo ---\n[INFO] argLine set to -javaagent:/Users/abilashraghuram/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar=destfile=/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target/jacoco.exec\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ demo ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/main/resources\n[INFO] \n[INFO] --- compiler:3.13.0:compile (default-compile) @ demo ---\n[INFO] Recompiling the module because of changed source code.\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 17] to target/classes\n[WARNING] location of system modules is not set in conjunction with -source 17\n  not setting the location of system modules may lead to class files that cannot run on JDK 17\n    --release 17 is recommended instead of -source 17 -target 17 because it sets the location of system modules automatically\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ demo ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/test/resources\n[INFO] \n[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ demo ---\n[INFO] Recompiling the module because of changed dependency.\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 17] to target/test-classes\n[WARNING] location of system modules is not set in conjunction with -source 17\n  not setting the location of system modules may lead to class files that cannot run on JDK 17\n    --release 17 is recommended instead of -source 17 -target 17 because it sets the location of system modules automatically\n[INFO] \n[INFO] --- surefire:2.22.2:test (default-test) @ demo ---\n[INFO] \n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running BankAccountTest\n[ERROR] Tests run: 14, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.028 s <<< FAILURE! - in BankAccountTest\n[ERROR] testApplyAnnualInterestPositiveRate  Time elapsed: 0.005 s  <<< ERROR!\njava.lang.NullPointerException: Simulated NullPointerException\n\tat BankAccountTest.testApplyAnnualInterestPositiveRate(BankAccountTest.java:123)\n\n[ERROR] testWithdraw  Time elapsed: 0.001 s  <<< ERROR!\njava.lang.NullPointerException: Simulated NullPointerException\n\tat BankAccountTest.testWithdraw(BankAccountTest.java:38)\n\n[ERROR] testInitialBalance  Time elapsed: 0 s  <<< ERROR!\njava.lang.NullPointerException: Simulated NullPointerException\n\tat BankAccountTest.testInitialBalance(BankAccountTest.java:16)\n\n[ERROR] testDeposit  Time elapsed: 0 s  <<< ERROR!\njava.lang.NullPointerException: Simulated NullPointerException\n\tat BankAccountTest.testDeposit(BankAccountTest.java:31)\n\n[ERROR] testExecuteBatchTransactions  Time elapsed: 0 s  <<< ERROR!\njava.lang.NullPointerException: Simulated NullPointerException\n\tat BankAccountTest.testExecuteBatchTransactions(BankAccountTest.java:109)\n\n[INFO] \n[INFO] Results:\n[INFO] \n[ERROR] Errors: \n[ERROR]   BankAccountTest.testApplyAnnualInterestPositiveRate:123 \u00bb NullPointer Simulate...\n[ERROR]   BankAccountTest.testDeposit:31 \u00bb NullPointer Simulated NullPointerException\n[ERROR]   BankAccountTest.testExecuteBatchTransactions:109 \u00bb NullPointer Simulated NullP...\n[ERROR]   BankAccountTest.testInitialBalance:16 \u00bb NullPointer Simulated NullPointerExcep...\n[ERROR]   BankAccountTest.testWithdraw:38 \u00bb NullPointer Simulated NullPointerException\n[INFO] \n[ERROR] Tests run: 14, Failures: 0, Errors: 5, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.434 s\n[INFO] Finished at: 2024-07-20T15:24:44-07:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.2:test (default-test) on project demo: There are test failures.\n[ERROR] \n[ERROR] Please refer to /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target/surefire-reports for the individual test results.\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException",
        "type": "Simulate Failures",
        "description": "Introduce a runtime exception by throwing a NullPointerException.",
        "udiff": "--- \n+++ \n@@ -20,7 +20,7 @@\n     }\n\n \n\n     public double getBalance() {\n\n-        return balance;\n\n+        throw new NullPointerException(\"Simulated NullPointerException\"); // Mutated to throw NullPointerException\n\n     }\n\n \n\n     public List<String> getTransactionHistory() {\n"
    },
    {
        "id": "3",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/3_BankAccount.java",
        "status": "KILLED",
        "error_msg": "[INFO] Scanning for projects...\n[INFO] \n[INFO] --------------------------< com.example:demo >--------------------------\n[INFO] Building demo 1.0-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ demo ---\n[INFO] Deleting /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target\n[INFO] \n[INFO] --- jacoco:0.8.7:prepare-agent (default) @ demo ---\n[INFO] argLine set to -javaagent:/Users/abilashraghuram/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar=destfile=/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target/jacoco.exec\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ demo ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/main/resources\n[INFO] \n[INFO] --- compiler:3.13.0:compile (default-compile) @ demo ---\n[INFO] Recompiling the module because of changed source code.\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 17] to target/classes\n[WARNING] location of system modules is not set in conjunction with -source 17\n  not setting the location of system modules may lead to class files that cannot run on JDK 17\n    --release 17 is recommended instead of -source 17 -target 17 because it sets the location of system modules automatically\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ demo ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/test/resources\n[INFO] \n[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ demo ---\n[INFO] Recompiling the module because of changed dependency.\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 17] to target/test-classes\n[WARNING] location of system modules is not set in conjunction with -source 17\n  not setting the location of system modules may lead to class files that cannot run on JDK 17\n    --release 17 is recommended instead of -source 17 -target 17 because it sets the location of system modules automatically\n[INFO] \n[INFO] --- surefire:2.22.2:test (default-test) @ demo ---\n[INFO] \n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running BankAccountTest\n[ERROR] Tests run: 14, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.026 s <<< FAILURE! - in BankAccountTest\n[ERROR] testScheduleTransactionValidDays  Time elapsed: 0.007 s  <<< ERROR!\njava.lang.NullPointerException: Cannot invoke \"java.util.List.size()\" because \"history\" is null\n\tat BankAccountTest.testScheduleTransactionValidDays(BankAccountTest.java:99)\n\n[ERROR] testApplyAnnualInterestPositiveRate  Time elapsed: 0.001 s  <<< ERROR!\njava.lang.NullPointerException: Cannot invoke \"java.util.List.size()\" because \"history\" is null\n\tat BankAccountTest.testApplyAnnualInterestPositiveRate(BankAccountTest.java:125)\n\n[ERROR] testGetTransactionHistory  Time elapsed: 0 s  <<< ERROR!\njava.lang.NullPointerException: Cannot invoke \"java.util.List.size()\" because \"history\" is null\n\tat BankAccountTest.testGetTransactionHistory(BankAccountTest.java:81)\n\n[ERROR] testExecuteBatchTransactions  Time elapsed: 0 s  <<< ERROR!\njava.lang.NullPointerException: Cannot invoke \"java.util.List.size()\" because \"history\" is null\n\tat BankAccountTest.testExecuteBatchTransactions(BankAccountTest.java:111)\n\n[INFO] \n[INFO] Results:\n[INFO] \n[ERROR] Errors: \n[ERROR]   BankAccountTest.testApplyAnnualInterestPositiveRate:125 NullPointer Cannot inv...\n[ERROR]   BankAccountTest.testExecuteBatchTransactions:111 NullPointer Cannot invoke \"ja...\n[ERROR]   BankAccountTest.testGetTransactionHistory:81 NullPointer Cannot invoke \"java.u...\n[ERROR]   BankAccountTest.testScheduleTransactionValidDays:99 NullPointer Cannot invoke ...\n[INFO] \n[ERROR] Tests run: 14, Failures: 0, Errors: 4, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.468 s\n[INFO] Finished at: 2024-07-20T15:24:49-07:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.2:test (default-test) on project demo: There are test failures.\n[ERROR] \n[ERROR] Please refer to /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target/surefire-reports for the individual test results.\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException",
        "type": "Return Values",
        "description": "Changed the return value to null to simulate data corruption.",
        "udiff": "--- \n+++ \n@@ -24,7 +24,7 @@\n     }\n\n \n\n     public List<String> getTransactionHistory() {\n\n-        return transactionHistory;\n\n+        return null; // Mutation: Returning null to simulate data corruption\n\n     }\n\n \n\n     public void deposit(double amount) {\n"
    },
    {
        "id": "4",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/4_BankAccount.java",
        "status": "SURVIVED",
        "error_msg": "",
        "type": "Data Handling",
        "description": "Returned a copy of the transaction history to prevent external modification.",
        "udiff": "--- \n+++ \n@@ -24,7 +24,7 @@\n     }\n\n \n\n     public List<String> getTransactionHistory() {\n\n-        return transactionHistory;\n\n+        return new ArrayList<>(transactionHistory); // Mutation: Returning a copy to prevent external modification\n\n     }\n\n \n\n     public void deposit(double amount) {\n"
    },
    {
        "id": "5",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/5_BankAccount.java",
        "status": "KILLED",
        "error_msg": "Tests run: 14, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.025 s <<< FAILURE! - in BankAccountTest\n[ERROR] testDepositNonPositiveAmount  Time elapsed: 0.004 s  <<< FAILURE!",
        "type": "Modify Core Logic",
        "description": "Altered the condition to allow zero amount deposits.",
        "udiff": "--- \n+++ \n@@ -28,7 +28,7 @@\n     }\n\n \n\n     public void deposit(double amount) {\n\n-        if (amount <= 0) {\n\n+        if (amount < 0) { // Mutation: Allow zero amount deposits\n\n             throw new IllegalArgumentException(\"Deposit amount must be positive\");\n\n         }\n\n         balance += amount;\n"
    },
    {
        "id": "6",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/6_BankAccount.java",
        "status": "KILLED",
        "error_msg": "[INFO] Scanning for projects...\n[INFO] \n[INFO] --------------------------< com.example:demo >--------------------------\n[INFO] Building demo 1.0-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ demo ---\n[INFO] Deleting /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target\n[INFO] \n[INFO] --- jacoco:0.8.7:prepare-agent (default) @ demo ---\n[INFO] argLine set to -javaagent:/Users/abilashraghuram/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar=destfile=/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target/jacoco.exec\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ demo ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/main/resources\n[INFO] \n[INFO] --- compiler:3.13.0:compile (default-compile) @ demo ---\n[INFO] Recompiling the module because of changed source code.\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 17] to target/classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] location of system modules is not set in conjunction with -source 17\n  not setting the location of system modules may lead to class files that cannot run on JDK 17\n    --release 17 is recommended instead of -source 17 -target 17 because it sets the location of system modules automatically\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/main/java/com/example/BankAccount.java:[35,9] unreachable statement\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.449 s\n[INFO] Finished at: 2024-07-20T15:24:57-07:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.13.0:compile (default-compile) on project demo: Compilation failure\n[ERROR] /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/main/java/com/example/BankAccount.java:[35,9] unreachable statement\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException",
        "type": "Simulate Failures",
        "description": "Introduced a runtime exception after updating the balance.",
        "udiff": "--- \n+++ \n@@ -31,7 +31,7 @@\n         if (amount <= 0) {\n\n             throw new IllegalArgumentException(\"Deposit amount must be positive\");\n\n         }\n\n-        balance += amount;\n\n+        balance += amount; throw new RuntimeException(\"Simulated failure after deposit\"); // Mutation: Simulate failure after deposit\n\n         transactionHistory.add(\"Deposited: \" + amount);\n\n     }\n\n \n"
    },
    {
        "id": "7",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/7_BankAccount.java",
        "status": "KILLED",
        "error_msg": "Tests run: 14, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.027 s <<< FAILURE! - in BankAccountTest\n[ERROR] testWithdrawNonPositiveAmount  Time elapsed: 0.004 s  <<< FAILURE!",
        "type": "Modify Core Logic",
        "description": "Altered the condition to allow withdrawal of zero amount.",
        "udiff": "--- \n+++ \n@@ -36,7 +36,7 @@\n     }\n\n \n\n     public void withdraw(double amount) {\n\n-        if (amount <= 0) {\n\n+        if (amount < 0) { // Mutation: Allow withdrawal of zero amount\n\n             throw new IllegalArgumentException(\"Withdrawal amount must be positive\");\n\n         }\n\n         if (amount > balance + overdraftLimit) {\n"
    },
    {
        "id": "8",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/8_BankAccount.java",
        "status": "KILLED",
        "error_msg": "Tests run: 14, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.045 s <<< FAILURE! - in BankAccountTest\n[ERROR] testExecuteBatchTransactions  Time elapsed: 0.007 s  <<< FAILURE!",
        "type": "Simulate Failures",
        "description": "Introduced a NullPointerException to simulate a failure.",
        "udiff": "--- \n+++ \n@@ -43,7 +43,7 @@\n             throw new IllegalArgumentException(\"Insufficient funds, including overdraft limit\");\n\n         }\n\n         balance -= amount;\n\n-        transactionHistory.add(\"Withdrew: \" + amount);\n\n+        transactionHistory.add(null); // Mutation: Introduce NullPointerException\n\n     }\n\n \n\n     public void applyAnnualInterest(double interestRate) {\n"
    },
    {
        "id": "9",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/9_BankAccount.java",
        "status": "KILLED",
        "error_msg": "Tests run: 14, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.027 s <<< FAILURE! - in BankAccountTest\n[ERROR] testApplyAnnualInterestNonPositiveRate  Time elapsed: 0.005 s  <<< FAILURE!",
        "type": "Modify Core Logic",
        "description": "Changed the condition to allow zero interest rate.",
        "udiff": "--- \n+++ \n@@ -47,7 +47,7 @@\n     }\n\n \n\n     public void applyAnnualInterest(double interestRate) {\n\n-        if (interestRate <= 0) {\n\n+        if (interestRate < 0) { // Mutation: Allow zero interest rate\n\n             throw new IllegalArgumentException(\"Interest rate must be positive\");\n\n         }\n\n         double interest = balance * (interestRate / 100);\n"
    },
    {
        "id": "10",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/10_BankAccount.java",
        "status": "KILLED",
        "error_msg": "Tests run: 14, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.03 s <<< FAILURE! - in BankAccountTest\n[ERROR] testApplyAnnualInterestPositiveRate  Time elapsed: 0.005 s  <<< FAILURE!",
        "type": "Simulate Failures",
        "description": "Introduced a runtime exception by setting interest to a negative value.",
        "udiff": "--- \n+++ \n@@ -50,7 +50,7 @@\n         if (interestRate <= 0) {\n\n             throw new IllegalArgumentException(\"Interest rate must be positive\");\n\n         }\n\n-        double interest = balance * (interestRate / 100);\n\n+        double interest = -balance * (interestRate / 100); // Mutation: Introduce negative interest\n\n         balance += interest;\n\n         transactionHistory.add(\"Interest applied: \" + interest);\n\n     }\n"
    },
    {
        "id": "11",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/11_BankAccount.java",
        "status": "KILLED",
        "error_msg": "[INFO] Scanning for projects...\n[INFO] \n[INFO] --------------------------< com.example:demo >--------------------------\n[INFO] Building demo 1.0-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ demo ---\n[INFO] Deleting /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target\n[INFO] \n[INFO] --- jacoco:0.8.7:prepare-agent (default) @ demo ---\n[INFO] argLine set to -javaagent:/Users/abilashraghuram/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar=destfile=/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/target/jacoco.exec\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ demo ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/main/resources\n[INFO] \n[INFO] --- compiler:3.13.0:compile (default-compile) @ demo ---\n[INFO] Recompiling the module because of changed source code.\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file with javac [debug target 17] to target/classes\n[INFO] -------------------------------------------------------------\n[WARNING] COMPILATION WARNING : \n[INFO] -------------------------------------------------------------\n[WARNING] location of system modules is not set in conjunction with -source 17\n  not setting the location of system modules may lead to class files that cannot run on JDK 17\n    --release 17 is recommended instead of -source 17 -target 17 because it sets the location of system modules automatically\n[INFO] 1 warning\n[INFO] -------------------------------------------------------------\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/main/java/com/example/BankAccount.java:[60,21] cannot find symbol\n  symbol:   variable deposit\n  location: class com.example.BankAccount\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.473 s\n[INFO] Finished at: 2024-07-20T15:25:17-07:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.13.0:compile (default-compile) on project demo: Compilation failure\n[ERROR] /Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/src/main/java/com/example/BankAccount.java:[60,21] cannot find symbol\n[ERROR]   symbol:   variable deposit\n[ERROR]   location: class com.example.BankAccount\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException",
        "type": "Modify Core Logic",
        "description": "Alter loop condition to cause early termination.",
        "udiff": "--- \n+++ \n@@ -56,7 +56,7 @@\n     }\n\n \n\n     public void executeBatchTransactions(double[] deposits, double[] withdrawals) {\n\n-        for (double deposit : deposits) {\n\n+        for (int i = 0; i < deposits.length - 1; i++) { // Mutation: Alter loop condition to cause early termination\n\n             deposit(deposit);\n\n         }\n\n         for (double withdrawal : withdrawals) {\n"
    },
    {
        "id": "12",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/12_BankAccount.java",
        "status": "SURVIVED",
        "error_msg": "",
        "type": "Simulate Failures",
        "description": "Introduce runtime exception to simulate failure.",
        "udiff": "--- \n+++ \n@@ -60,7 +60,7 @@\n             deposit(deposit);\n\n         }\n\n         for (double withdrawal : withdrawals) {\n\n-            withdraw(withdrawal);\n\n+            if (withdrawal > 1000) throw new RuntimeException(\"Simulated failure\"); withdraw(withdrawal); // Mutation: Introduce runtime exception to simulate failure\n\n         }\n\n         transactionHistory.add(\"Batch transactions executed\");\n\n     }\n"
    },
    {
        "id": "13",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/13_BankAccount.java",
        "status": "SURVIVED",
        "error_msg": "",
        "type": "Modify Core Logic",
        "description": "Altered the condition to allow negative days, which should not be allowed.",
        "udiff": "--- \n+++ \n@@ -66,7 +66,7 @@\n     }\n\n \n\n     public void scheduleTransaction(String type, double amount, int daysFromNow) {\n\n-        if (daysFromNow < 0) {\n\n+        if (daysFromNow <= 0) { // Mutation: Allow zero or negative days\n\n             throw new IllegalArgumentException(\"Days from now must be non-negative\");\n\n         }\n\n         // This is a simplification; in a real system, you would have a scheduler.\n"
    },
    {
        "id": "14",
        "source_path": "src/main/java/com/example/BankAccount.java",
        "mutant_path": "/Users/abilashraghuram/CodeIntegrity/HenryAI/examples/java_maven/logs/_latest/mutants/14_BankAccount.java",
        "status": "KILLED",
        "error_msg": "Tests run: 14, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.025 s <<< FAILURE! - in BankAccountTest\n[ERROR] testScheduleTransactionValidDays  Time elapsed: 0.007 s  <<< FAILURE!",
        "type": "Simulate Failures",
        "description": "Introduced a NullPointerException to simulate a failure scenario.",
        "udiff": "--- \n+++ \n@@ -71,6 +71,6 @@\n         }\n\n         // This is a simplification; in a real system, you would have a scheduler.\n\n         // We'll just log the scheduled transaction for demonstration purposes.\n\n-        transactionHistory.add(\"Scheduled \" + type + \" of \" + amount + \" in \" + daysFromNow + \" days\");\n\n+        transactionHistory.add(null); // Mutation: Introduce NullPointerException\n\n     }\n\n }\n"
    }
]