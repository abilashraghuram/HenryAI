# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .completion_choice import CompletionChoice
from .usage_stats import UsageStats


class CompletionResponse(pydantic_v1.BaseModel):
    """
    Represents a completion response from the API.
    Note: both the streamed and non-streamed response objects
    share the same shape (unlike the chat endpoint).
    """

    choices: typing.List[CompletionChoice] = pydantic_v1.Field()
    """
    A list of completion choices.
    """

    created: int = pydantic_v1.Field()
    """
    The Unix timestamp (in seconds) of when the completion was created.
    """

    id: str = pydantic_v1.Field()
    """
    A unique identifier for the completion.
    """

    model: str = pydantic_v1.Field()
    """
    The model used for the completion.
    """

    object: typing.Optional[typing.Any] = None
    system_fingerprint: str = pydantic_v1.Field()
    """
    The system response fingerprint.
    """

    usage: typing.Optional[UsageStats] = pydantic_v1.Field(default=None)
    """
    Usage statistics for the request.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
